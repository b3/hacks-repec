#!/bin/bash
# Crée une trace d'exécution d'une copie de la base RePEc en local.
# 
# usage: repec-trace [OPTIONS]
#
# La trace est construite à partir des répertoires présents dans RDIR/remo et
# des fichiers présents dans RDIR/log. La trace est affichée sur la sortie
# standard.
#
# RDIR est le répertoire contenant la base des données de RePEc. La valeur par
# défaut pour RDIR est le contenu de la variable d'environnement REPEC_HOME si
# elle existe ou /home/repec/RePEc sinon.
#
# OPTIONS possibles :
#     -h, --help          affiche ce message
#     -d, --dest DIR      fixe l'emplacement de la base RePEc
#     -w, --webpage       génère une page HTML plutôt que du texte

DEST=${REPEC_HOME:-/home/repec/RePEc}
HTML=false

doc () { sed -n '2,/^$/ {s/^ *#// ; s/^ //g ; p }' <$0 ; }

out ()
{
    $HTML || printf "$1\n\n"
    $HTML && printf "    <h2>$1</h2>\n<pre>\n"
    shift 
    if $HTML ; then
        eval "$*" | sed -e 's/</\&lt;/g' -e 's/>/\&gt;/g'
    else
        eval "$*"
    fi
    $HTML || printf "\n\n"
    $HTML && printf "</pre>\n\n"
}

while [ ! -z "$1" ] ;
do
    case "$1" in
        "-h"|"--help") doc && exit ;;
        "-d"|"--dest") shift ; DEST="$(cd $1 && pwd)" ;;
        "-w"|"--webpage") HTML=true ;;
        *) break;
    esac
    shift
done

$HTML && {
    titre="Trace RePEc du $(date '+%F à %T')"
    nom="$(git config --get user.name)"
    email="$(git config --get user.email)"
    
    cat <<EOF
<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="UTF-8"/>
    <meta name="author" content="$nom ($email)"/>
    <meta name='viewport' content='width=device-width, initial-scale=1, user-scalable=yes' />
    <style type="text/css">
$(sed -n '\!^# <CSS>!,\!^# </CSS>! { s/^/      / ; p }' $0 | sed '1d ; $d')
    </style>
    <script>
      window.setTimeout(function(){ location.reload() }, 10000);
    </script>
    <title>$titre</title>
  </head>

  <body>
    <h1>$titre</h1>

    <p>
      Les archives téléchargées sont accessibles dans <code><a href='remo'>remo</a></code>.
      La page se recharge automatiquement toutes les 10 secondes.
    </p>

    <p>
      Une copie publique du dépôt git contenant les outils et informations
      utilisés pour télécharger les archives (<em>notices bibliographiques
      uniquement</em>) de la base <a href='http://repec.org'>RePEc</a> est
      disponible sur <a
      href='https://github.com/b3/hacks-repec'>GitHub</a>.<br/>Elle est donc
      récupérable via <code>git clone
      https://github.com/b3/hacks-repec.git</code>.
    </p>

EOF
}

cd "$DEST"

out "Dernières actions" \
    "tail -n 5 log/repec.log"

out "Dernières archives modifiées" \
    "ls -tl remo | head -n 6 | sed 1d"

out "Dernières archives en erreur" \
    "grep 'error [0-9]$' log/repec.log | tail -n 20 | cut -d ' ' -f 4 | tr '\n' ' ' | sed 's/$/\n/'"

shopt -s nullglob
out "Derniers téléchargements" \
    "tail -n 10 $(ls -1t log/???.log log/mirror.log | head -n 1 | tr '\n' ' ')"

out "Taille disque utilisée" \
    "du -shc *"

out "Nombre de fichiers ReDIF" \
    "find remo -type f -name '*.rdf' | wc -l"

$HTML && cat <<EOF
  </body>
</html>
EOF

exit 0

##############################################################################

# <CSS>
/*
html{
  max-width:100%;
}
*/
body{
  font-family: helvetica, arial, freesans, clean, sans-serif;
  color: #333;
  background-color: #fff;
  border: none;
  line-height: 1.5;
  margin: 2em 3em;
  text-align:left;
}
pre{
  background-color: #eee;
  padding: 10px;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
  overflow: auto;
}
code{
  background-color: #eee;
  padding: 1px 3px;
  -webkit-border-radius: 2px;
  -moz-border-radius: 2px;
  border-radius: 2px;   
}
li p{
  margin: 0.3em;
}
li{
  list-style-type: disc;
}
a:link, a:visited{
  color: #33e;
  text-decoration: none;
}
a:hover{
  color: #00f;
  text-shadow:1px 1px 2px #ccf;
  text-decoration:underline;
}
h1{
  color: #999;
  font-weight: bold;
  }
h2{
  border-bottom: 1px dotted #aaa;
  margin-bottom: 1em;
  color: #333;
}
h3{
  color: #666;
}
# </CSS>
